from pandas import DataFrame
from . import openai_client as client, CONFIG, token_size
from tqdm import tqdm

EMBED_MODEL = CONFIG["EMBED"]["MODEL"]


def get_embedding(in_str: str) -> list[float]:
    return client.embeddings.create(input=in_str, model=EMBED_MODEL).data[0].embedding


def generate(df: DataFrame, col_id: str = "Data") -> DataFrame:
    """
    Receive database with input data, add column containing embeddings.

    Input:
    - input_path: DataFrame (Pandas DataFrame containing data)
        - columns: [_, Data]

    Output:
    - DataFrame: [_, Data*, Embedding*]
        - Data: Processed to remove redundant whitespace (process_input)
        - Embedding: Embeddings for data generated by embedding model
    """
    progress_bar = tqdm(df.iterrows(), total=len(df), desc="Generating embeddings")
    token_list = []
    embed_list = []
    for _, row in progress_bar:
        token_list += [token_size(row[col_id])]
        embed_list += [get_embedding(row[col_id])]
    df["Token"] = token_list
    df["Embedding"] = embed_list
    return df
